name: Project51 Self-Healing CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/project51:${{ github.sha }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Update image tag in deployment manifest
        run: |
          sed -i 's|DOCKER_IMAGE_PLACEHOLDER|${{ secrets.DOCKER_USERNAME }}/project51:${{ github.sha }}|g' k8s/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/
          echo "Waiting for deployment to complete..."
          kubectl rollout status deployment/project51-deployment --timeout=120s

  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure() && needs.deploy.result == 'failure'
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Execute Rollback
        run: |
          echo "Deployment failed. Rolling back..."
          LAST_GOOD_SHA=$(git rev-parse HEAD~1)
          LAST_GOOD_IMAGE="${{ secrets.DOCKER_USERNAME }}/project51:${LAST_GOOD_SHA}"
          echo "Rolling back to image: ${LAST_GOOD_IMAGE}"
          kubectl set image deployment/project51-deployment project51-container=${LAST_GOOD_IMAGE} --record
